#  This workflow will do a clean install of node dependencies, run tests, build on test success, publish on build success and notify on success or failure.
#  For more information see:
#
#
#  https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# @FragnaroK
# 08-11-2023

name: Build and publish NPM package (IFTTT integration)

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
        
    - name: Clean install of dependencies
      run: npm ci 
          
    - name: Run tests
      id: tests
      run: npm test

    - name: Notify test success
      if: steps.tests.outcome == 'success' 
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://maker.ifttt.com/trigger/${{ secrets.NOTIFY }}/json/with/key/${{ secrets.IFTTT_KEY }}'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"repoName": "<your-repo-name>","status": "Pending","details": "${{ vars.TEST_OK_BUILD_PEN }}","repoLink": "<your-repo-link>"}'
        
    - name: Notify test failure
      if: steps.tests.outcome != 'success' 
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://maker.ifttt.com/trigger/${{ secrets.NOTIFY }}/json/with/key/${{ secrets.IFTTT_KEY }}'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"repoName": "<your-repo-name>","status": "Error","details": "${{ vars.TEST_ER_BUILD_SKIP }}","repoLink": "<your-repo-link>"}'

    - name: Build on test success
      if: steps.tests.outcome == 'success'
      id: builder
      run: npm run build --if-present
 
    - name: Notify build success
      if: steps.builder.outcome == 'success' && steps.tests.outcome == 'success'
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://maker.ifttt.com/trigger/${{ secrets.NOTIFY }}/json/with/key/${{ secrets.IFTTT_KEY }}'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"repoName": "<your-repo-name>","status": "Success","details": "${{ vars.BUILD_OK }}","repoLink": "<your-repo-link>"}'

    - name: Notify build failure
      if: steps.builder.outcome != 'success' && steps.tests.outcome == 'success'
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://maker.ifttt.com/trigger/${{ secrets.NOTIFY }}/json/with/key/${{ secrets.IFTTT_KEY }}'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"repoName": "<your-repo-name>","status": "Error","details": "${{ vars.BUILD_ER }}","repoLink": "<your-repo-link>"}'

    - name: Publish on test success
      if: steps.tests.outcome == 'success' && steps.builder.outcome == 'success'
      id: publisher
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_KEY }}

    - name: Notify publish success
      if: steps.publisher.outcome == 'success' && steps.tests.outcome == 'success' && steps.builder.outcome == 'success'
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://maker.ifttt.com/trigger/${{ secrets.NOTIFY }}/json/with/key/${{ secrets.IFTTT_KEY }}'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"repoName": "<your-repo-name>","status": "Success","details": "${{ vars.PUBLISH_OK }}","repoLink": "<your-repo-link>"}'

    - name: Notify publish failure
      if: steps.publisher.outcome != 'success' && steps.tests.outcome == 'success' && steps.builder.outcome == 'success'
      uses: fjogeleit/http-request-action@v1
      with:
        url: 'https://maker.ifttt.com/trigger/${{ secrets.NOTIFY }}/json/with/key/${{ secrets.IFTTT_KEY }}'
        method: 'POST'
        customHeaders: '{"Content-Type": "application/json"}'
        data: '{"repoName": "<your-repo-name>","status": "Error","details": "${{ vars.PUBLISH_ER }}","repoLink": "<your-repo-link>"}'

      